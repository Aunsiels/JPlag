import type { Metric } from './Metric'
import type { Cluster } from '@/model/Cluster'

/**
 * Model of the Overview file generated by JPlag
 */
export class Overview {
  private readonly _submissionFolderPath: Array<string>
  private readonly _baseCodeFolderPath: string
  private readonly _language: string
  private readonly _fileExtensions: Array<string>
  private readonly _matchSensitivity: number
  private readonly _submissionIdsToComparisonFileName: Map<string, Map<string, string>>
  private readonly _dateOfExecution: string
  private readonly _durationOfExecution: number
  private readonly _metrics: Array<Metric>
  private readonly _clusters: Array<Cluster>
  private readonly _totalComparisons: number

  constructor(
    submissionFolderPath: Array<string>,
    baseCodeFolderPath: string,
    language: string,
    fileExtensions: Array<string>,
    matchSensitivity: number,
    dateOfExecution: string,
    durationOfExecution: number,
    metrics: Array<Metric>,
    clusters: Array<Cluster>,
    totalComparisons: number,
    submissionIdsToComparisonFileName: Map<string, Map<string, string>>
  ) {
    this._submissionFolderPath = submissionFolderPath
    this._baseCodeFolderPath = baseCodeFolderPath
    this._language = language
    this._fileExtensions = fileExtensions
    this._matchSensitivity = matchSensitivity
    this._dateOfExecution = dateOfExecution
    this._durationOfExecution = durationOfExecution
    this._metrics = metrics
    this._clusters = clusters
    this._submissionIdsToComparisonFileName = submissionIdsToComparisonFileName
    this._totalComparisons = totalComparisons
  }

  /**
   * @return Map of submission ids to the name of the comparison file and their content
   */
  get submissionIdsToComparisonFileName() {
    return this._submissionIdsToComparisonFileName
  }

  /**
   * @return Path to the folder containing the submissions
   */
  get submissionFolderPath() {
    return this._submissionFolderPath
  }

  /**
   * @return Path to the folder containing the base code
   */
  get baseCodeFolderPath() {
    return this._baseCodeFolderPath
  }

  /**
   * @return Language of the submissions
   */
  get language() {
    return this._language
  }

  /**
   * @return File extensions of the submissions
   */
  get fileExtensions() {
    return this._fileExtensions
  }

  /**
   * @return Match sensitivity used for running JPlag
   */
  get matchSensitivity() {
    return this._matchSensitivity
  }

  /**
   * @return Date of execution of JPlag
   */
  get dateOfExecution() {
    return this._dateOfExecution
  }

  /**
   * @return Time JPlag took to run
   */
  get durationOfExecution() {
    return this._durationOfExecution
  }

  /**
   * @return Metrics used in the JPlag Comparison
   */
  get metrics() {
    return this._metrics
  }

  /**
   * @return Clusters of the JPlag Comparison
   */
  get clusters() {
    return this._clusters
  }

  /**
   * @return Total number of comparisons
   */
  get totalComparisons() {
    return this._totalComparisons
  }
}
